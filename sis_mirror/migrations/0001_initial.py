# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-04-18 00:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceFlags',
            fields=[
                ('attendance_flag_id', models.AutoField(primary_key=True, serialize=False)),
                ('character_code', models.CharField(max_length=30)),
                ('flag_text', models.CharField(blank=True, max_length=255, null=True)),
                ('precedence', models.IntegerField()),
                ('is_present', models.BooleanField()),
                ('is_excused', models.BooleanField()),
                ('display_code', models.CharField(max_length=100)),
                ('is_reconciled', models.BooleanField()),
                ('is_tardy', models.BooleanField()),
                ('trigger_truancy', models.BooleanField()),
                ('trigger_tardy', models.BooleanField()),
                ('trigger_irregular', models.BooleanField()),
                ('is_30min_tardy', models.BooleanField()),
                ('system_key', models.CharField(blank=True, max_length=255, null=True)),
                ('is_permissive', models.BooleanField()),
                ('is_truancy', models.BooleanField()),
                ('is_suspension', models.BooleanField()),
                ('is_verified', models.BooleanField()),
                ('attendance_flag_type_id', models.IntegerField()),
                ('attendance_program_set_id', models.IntegerField(blank=True, null=True)),
                ('is_apportioned', models.BooleanField()),
                ('apportionment', models.DecimalField(decimal_places=3, max_digits=4)),
                ('apportionment_secondary_flag_type_id', models.IntegerField()),
            ],
            options={
                'db_table': 'attendance_flags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('category_id', models.IntegerField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=255)),
                ('gradebook_id', models.IntegerField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('category_type_id', models.IntegerField(blank=True, null=True)),
                ('session_id', models.IntegerField(blank=True, null=True)),
                ('max_pct', models.FloatField(blank=True, null=True)),
                ('drop_lowest_x_scores', models.IntegerField()),
            ],
            options={
                'db_table': 'categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryScoreCache',
            fields=[
                ('cache_id', models.AutoField(primary_key=True, serialize=False)),
                ('possible_points', models.FloatField(blank=True, null=True)),
                ('points_earned', models.FloatField(blank=True, null=True)),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('category_name', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('mark', models.CharField(blank=True, max_length=255, null=True)),
                ('mark_color', models.CharField(blank=True, max_length=7, null=True)),
                ('missing_count', models.IntegerField(blank=True, null=True)),
                ('assignment_count', models.IntegerField(blank=True, null=True)),
                ('zero_count', models.IntegerField(blank=True, null=True)),
                ('excused_count', models.IntegerField(blank=True, null=True)),
                ('calculated_at', models.DateTimeField()),
                ('timeframe_start_date', models.DateField()),
                ('timeframe_end_date', models.DateField()),
            ],
            options={
                'db_table': 'category_score_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryTypes',
            fields=[
                ('category_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('category_type_name', models.CharField(max_length=255)),
                ('is_academic', models.BooleanField()),
            ],
            options={
                'db_table': 'category_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('course_id', models.IntegerField(primary_key=True, serialize=False)),
                ('short_name', models.CharField(max_length=30)),
                ('long_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('school_course_id', models.CharField(blank=True, max_length=20, null=True)),
                ('non_existent', models.SmallIntegerField(blank=True, null=True)),
                ('credits', models.FloatField(blank=True, null=True)),
                ('has_variable_credits', models.BooleanField()),
                ('variable_credits_low', models.FloatField(blank=True, null=True)),
                ('variable_credits_high', models.FloatField(blank=True, null=True)),
                ('max_credits', models.FloatField(blank=True, null=True)),
                ('is_specialed', models.NullBooleanField()),
                ('course_requirement_priority', models.SmallIntegerField(blank=True, null=True)),
                ('site_id', models.IntegerField()),
                ('is_weighted', models.NullBooleanField()),
                ('cbeds_course_id_num', models.CharField(blank=True, max_length=25, null=True)),
                ('eq_course_id', models.IntegerField(blank=True, null=True)),
                ('level', models.FloatField(blank=True, null=True)),
                ('is_non_academic', models.NullBooleanField()),
                ('is_active', models.NullBooleanField()),
                ('site_type_id', models.IntegerField(blank=True, null=True)),
                ('department_id', models.IntegerField(blank=True, null=True)),
                ('num_timeblocks', models.IntegerField()),
                ('term_length', models.FloatField(blank=True, null=True)),
                ('term_offered', models.FloatField(blank=True, null=True)),
                ('max_capacity', models.IntegerField(blank=True, null=True)),
                ('min_capacity', models.IntegerField(blank=True, null=True)),
                ('average_capacity', models.IntegerField(blank=True, null=True)),
                ('is_intervention', models.NullBooleanField()),
                ('session_type_id', models.IntegerField(blank=True, null=True)),
                ('start_academic_year', models.IntegerField(blank=True, null=True)),
                ('end_academic_year', models.IntegerField(blank=True, null=True)),
                ('term_covered', models.IntegerField(blank=True, null=True)),
                ('field_nclb_core', models.CharField(blank=True, db_column='_nclb_core', max_length=1, null=True)),
                ('course_type', models.IntegerField(blank=True, null=True)),
                ('nclb_instructional_level', models.IntegerField(blank=True, null=True)),
                ('course_content', models.IntegerField(blank=True, null=True)),
                ('non_standard_instructional_level', models.IntegerField(blank=True, null=True)),
                ('education_service', models.IntegerField(blank=True, null=True)),
                ('instructional_strategy', models.IntegerField(blank=True, null=True)),
                ('program_funding_source', models.IntegerField(blank=True, null=True)),
                ('cte_funding_provider', models.IntegerField(blank=True, null=True)),
                ('tech_prep', models.BooleanField()),
                ('language_of_instruction_id', models.IntegerField(blank=True, null=True)),
                ('field_always_include_on_hs_transcript', models.NullBooleanField(db_column='_always_include_on_hs_transcript')),
                ('include_in_ada_reporting', models.BooleanField()),
                ('attendance_program_set_id', models.IntegerField(blank=True, null=True)),
                ('exclude_from_state_reporting', models.NullBooleanField()),
                ('crdc_course_area_id', models.IntegerField(blank=True, null=True)),
                ('crdc_is_ap', models.NullBooleanField()),
                ('crdc_is_ib', models.NullBooleanField()),
                ('transcript_inclusion', models.NullBooleanField()),
                ('ap_ib_course_id', models.IntegerField(blank=True, null=True)),
                ('cip_code_id', models.IntegerField(blank=True, null=True)),
                ('state_course_name', models.CharField(blank=True, max_length=100, null=True)),
                ('hide_ms_credits', models.BooleanField()),
                ('scholarship_program_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'courses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gradebooks',
            fields=[
                ('gradebook_id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField()),
                ('show_inactive_students', models.BooleanField()),
                ('auto_save_mins', models.IntegerField(blank=True, null=True)),
                ('gradebook_name', models.CharField(blank=True, max_length=255, null=True)),
                ('num_visible_assignments', models.IntegerField()),
                ('lock_published_gp', models.BooleanField()),
                ('parent_portal', models.BooleanField()),
                ('active', models.BooleanField()),
                ('version', models.IntegerField()),
                ('academic_year', models.IntegerField()),
                ('session_type_id', models.IntegerField()),
                ('is_deleted', models.BooleanField()),
            ],
            options={
                'db_table': 'gradebooks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GradebookSectionCourseAff',
            fields=[
                ('gsca_id', models.IntegerField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'gradebook_section_course_aff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GradeLevels',
            fields=[
                ('grade_level_id', models.IntegerField(primary_key=True, serialize=False)),
                ('sort_order', models.IntegerField()),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('long_name', models.CharField(blank=True, max_length=255, null=True)),
                ('standard_age', models.SmallIntegerField(blank=True, null=True)),
                ('state_id', models.CharField(blank=True, max_length=455, null=True)),
                ('system_sort_order', models.IntegerField(blank=True, null=True)),
                ('system_key', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'grade_levels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OverallScoreCache',
            fields=[
                ('cache_id', models.AutoField(primary_key=True, serialize=False)),
                ('possible_points', models.FloatField(blank=True, null=True)),
                ('points_earned', models.FloatField(blank=True, null=True)),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('mark', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, max_length=7, null=True)),
                ('missing_count', models.IntegerField(blank=True, null=True)),
                ('assignment_count', models.IntegerField(blank=True, null=True)),
                ('zero_count', models.IntegerField(blank=True, null=True)),
                ('excused_count', models.IntegerField(blank=True, null=True)),
                ('timeframe_start_date', models.DateField()),
                ('timeframe_end_date', models.DateField()),
                ('calculated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'overall_score_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('room_id', models.IntegerField(primary_key=True, serialize=False)),
                ('room_number', models.CharField(max_length=20)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('site_id', models.IntegerField()),
            ],
            options={
                'db_table': 'rooms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectionCourseAff',
            fields=[
                ('section_course_aff_id', models.IntegerField(primary_key=True, serialize=False)),
                ('section_id', models.IntegerField()),
                ('course_id', models.IntegerField()),
                ('max_capacity', models.SmallIntegerField(blank=True, null=True)),
                ('min_capacity', models.SmallIntegerField(blank=True, null=True)),
                ('average_capacity', models.SmallIntegerField(blank=True, null=True)),
                ('attendance_program_set_id', models.IntegerField(blank=True, null=True)),
                ('credit_hours', models.FloatField(blank=True, null=True)),
                ('outer_site_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'section_course_aff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sections',
            fields=[
                ('section_id', models.IntegerField(primary_key=True, serialize=False)),
                ('seating_chart_rows', models.IntegerField(blank=True, null=True)),
                ('seating_chart_cols', models.IntegerField(blank=True, null=True)),
                ('room_id', models.IntegerField(blank=True, null=True)),
                ('is_core', models.BooleanField()),
                ('local_section_id', models.CharField(blank=True, max_length=100, null=True)),
                ('section_name', models.CharField(blank=True, max_length=255, null=True)),
                ('teaching_type', models.CharField(blank=True, max_length=50, null=True)),
                ('multiple_teacher_status', models.CharField(blank=True, max_length=10, null=True)),
                ('include_in_csr_reports', models.NullBooleanField()),
                ('independent_study', models.BooleanField()),
                ('distance_learning', models.BooleanField()),
                ('is_attendance_enabled', models.BooleanField()),
                ('house_id', models.IntegerField(blank=True, null=True)),
                ('language_of_instruction_id', models.IntegerField(blank=True, null=True)),
                ('education_service', models.IntegerField(blank=True, null=True)),
                ('instructional_strategy', models.IntegerField(blank=True, null=True)),
                ('exclude_from_state_reporting', models.NullBooleanField()),
                ('field_attendance_program_set_id', models.IntegerField(blank=True, db_column='_attendance_program_set_id', null=True)),
                ('mentor_teacher', models.NullBooleanField()),
                ('field_alternative_learning_experience', models.BooleanField(db_column='_alternative_learning_experience')),
                ('skill_center', models.BooleanField()),
                ('minutes_per_week', models.IntegerField()),
                ('alternative_learning_experience_program_id', models.IntegerField(blank=True, null=True)),
                ('alternative_learning_experience_type_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectionStudentAff',
            fields=[
                ('ssa_id', models.IntegerField(primary_key=True, serialize=False)),
                ('section_id', models.IntegerField(blank=True, null=True)),
                ('student_id', models.IntegerField(blank=True, null=True)),
                ('seat_row', models.IntegerField(blank=True, null=True)),
                ('seat_col', models.IntegerField(blank=True, null=True)),
                ('entry_date', models.DateField()),
                ('leave_date', models.DateField(blank=True, null=True)),
                ('course_id', models.IntegerField()),
                ('entry_code_id', models.IntegerField(blank=True, null=True)),
                ('exit_code_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'section_student_aff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectionTeacherAff',
            fields=[
                ('sta_id', models.IntegerField(primary_key=True, serialize=False)),
                ('section_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('primary_teacher', models.NullBooleanField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('classroom_role_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'section_teacher_aff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectionTimeblockAff',
            fields=[
                ('stba_id', models.IntegerField(primary_key=True, serialize=False)),
                ('section_id', models.IntegerField()),
                ('timeblock_id', models.IntegerField()),
            ],
            options={
                'db_table': 'section_timeblock_aff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('site_id', models.IntegerField(primary_key=True, serialize=False)),
                ('site_name', models.CharField(max_length=255)),
                ('site_type_id', models.IntegerField()),
                ('start_grade_level_id', models.IntegerField(blank=True, null=True)),
                ('end_grade_level_id', models.IntegerField(blank=True, null=True)),
                ('parent_site_id', models.IntegerField()),
                ('attendance_lock', models.BooleanField()),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone1', models.CharField(blank=True, max_length=100, null=True)),
                ('phone2', models.CharField(blank=True, max_length=100, null=True)),
                ('principal_name', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('academy_type', models.CharField(blank=True, max_length=10, null=True)),
                ('title1_math', models.NullBooleanField()),
                ('title1_reading', models.NullBooleanField()),
                ('opportunity_school', models.NullBooleanField()),
                ('continuation_school', models.NullBooleanField()),
                ('has_students', models.NullBooleanField()),
                ('fax', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.IntegerField()),
                ('computers_for_instruction', models.IntegerField(blank=True, null=True)),
                ('classrooms_with_internet', models.IntegerField(blank=True, null=True)),
                ('calendar_type_id', models.IntegerField(blank=True, null=True)),
                ('state_school_id', models.CharField(blank=True, max_length=255, null=True)),
                ('num_weeks', models.FloatField(blank=True, null=True)),
                ('num_hours', models.FloatField(blank=True, null=True)),
                ('middle_transcript_grade_level_ids', models.TextField(blank=True, null=True)),
                ('high_transcript_grade_level_ids', models.TextField(blank=True, null=True)),
                ('lt', models.IntegerField(blank=True, null=True)),
                ('rt', models.IntegerField(blank=True, null=True)),
                ('truancy_letter_contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('truancy_letter_contact_title', models.CharField(blank=True, max_length=255, null=True)),
                ('site_long_name', models.CharField(blank=True, max_length=255, null=True)),
                ('track_attendance', models.BooleanField()),
                ('asam_school', models.NullBooleanField()),
                ('ceeb_code', models.CharField(blank=True, max_length=10, null=True)),
                ('exclude_from_state_reporting', models.NullBooleanField()),
                ('local_site_id', models.CharField(blank=True, max_length=25, null=True)),
                ('exclude_from_current_sites', models.NullBooleanField()),
                ('non_public_school', models.NullBooleanField()),
                ('did_not_meet_ayp_three_consecutive_years', models.NullBooleanField()),
                ('msds_s2e2_code', models.CharField(blank=True, max_length=5, null=True)),
                ('county_id', models.IntegerField(blank=True, null=True)),
                ('state_district_id', models.CharField(blank=True, max_length=20, null=True)),
                ('skill_center', models.NullBooleanField()),
                ('geolocation', models.CharField(blank=True, max_length=32, null=True)),
                ('site_guid', models.UUIDField()),
                ('site_url', models.CharField(blank=True, max_length=255, null=True)),
                ('is_disabled', models.BooleanField()),
                ('nces_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_special_ed_school', models.NullBooleanField()),
                ('is_magnet_school', models.NullBooleanField()),
                ('magnet_full_participation', models.NullBooleanField()),
                ('is_charter_school', models.NullBooleanField()),
                ('is_alternative_school', models.NullBooleanField()),
                ('alternative_focus', models.CharField(blank=True, max_length=255, null=True)),
                ('is_ap_self_selection', models.NullBooleanField()),
                ('show_report_cards', models.NullBooleanField()),
            ],
            options={
                'db_table': 'sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsCurrent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField()),
                ('site_id', models.IntegerField()),
                ('grade_level_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ss_current',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=200, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('creation_time', models.DateTimeField(blank=True, null=True)),
                ('field_last_mod_time', models.DateTimeField(blank=True, db_column='_last_mod_time', null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('local_student_id', models.CharField(max_length=30)),
                ('name_suffix', models.CharField(blank=True, max_length=10, null=True)),
                ('aka_first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('aka_last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('aka_middle_name', models.CharField(blank=True, max_length=200, null=True)),
                ('aka_name_suffix', models.CharField(blank=True, max_length=200, null=True)),
                ('state_student_id', models.CharField(blank=True, max_length=30, null=True)),
                ('migrant_ed_student_id', models.CharField(blank=True, max_length=30, null=True)),
                ('birth_city', models.CharField(blank=True, max_length=100, null=True)),
                ('birth_state', models.IntegerField(blank=True, null=True)),
                ('birth_country', models.IntegerField(blank=True, null=True)),
                ('three_years_us_schooling', models.NullBooleanField()),
                ('interdistrict_transfer', models.NullBooleanField()),
                ('field_residence_district', models.CharField(blank=True, db_column='_residence_district', max_length=200, null=True)),
                ('field_gate', models.NullBooleanField(db_column='_gate')),
                ('field_nslp', models.NullBooleanField(db_column='_nslp')),
                ('birthdate_verification', models.IntegerField(blank=True, null=True)),
                ('homeless_dwelling_type', models.IntegerField(blank=True, null=True)),
                ('english_proficiency', models.IntegerField(blank=True, null=True)),
                ('primary_ethnicity', models.IntegerField(blank=True, null=True)),
                ('primary_language', models.IntegerField(blank=True, null=True)),
                ('correspondence_language', models.IntegerField(blank=True, null=True)),
                ('residential_status', models.IntegerField(blank=True, null=True)),
                ('special_needs_status', models.IntegerField(blank=True, null=True)),
                ('district_enter_date', models.DateField(blank=True, null=True)),
                ('field_has_504_plan', models.NullBooleanField(db_column='_has_504_plan')),
                ('home_address_is_mailing_address', models.BooleanField()),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('number_504accommodations', models.TextField(blank=True, db_column='504accommodations', null=True)),
                ('number_504annual_review_date', models.DateField(blank=True, db_column='504annual_review_date', null=True)),
                ('photo_release', models.NullBooleanField()),
                ('military_recruitment', models.NullBooleanField()),
                ('field_exit_date', models.DateField(blank=True, db_column='_exit_date', null=True)),
                ('bus_num', models.CharField(blank=True, max_length=100, null=True)),
                ('pickup_time', models.TimeField(blank=True, null=True)),
                ('last_school_year', models.IntegerField(blank=True, null=True)),
                ('lunch_id', models.CharField(blank=True, max_length=30, null=True)),
                ('school_enter_date', models.DateField(blank=True, null=True)),
                ('local_lunch_id', models.CharField(blank=True, max_length=40, null=True)),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('social_security_number', models.CharField(blank=True, max_length=9, null=True)),
                ('bus_depart_time', models.TimeField(blank=True, null=True)),
                ('bus_depart_num', models.CharField(blank=True, max_length=100, null=True)),
                ('prior_district', models.CharField(blank=True, max_length=255, null=True)),
                ('prior_school', models.CharField(blank=True, max_length=255, null=True)),
                ('sst_date', models.DateField(blank=True, null=True)),
                ('avid_grade_level_id', models.IntegerField(blank=True, null=True)),
                ('avid_enter_date', models.DateField(blank=True, null=True)),
                ('avid_exit_date', models.DateField(blank=True, null=True)),
                ('field_migrant', models.NullBooleanField(db_column='_migrant')),
                ('graduation_requirement_year', models.IntegerField(blank=True, null=True)),
                ('hsee_ela_status', models.CharField(blank=True, max_length=10, null=True)),
                ('hsee_math_status', models.CharField(blank=True, max_length=10, null=True)),
                ('us_abroad', models.NullBooleanField()),
                ('military_family', models.NullBooleanField()),
                ('military_leave_date', models.DateField(blank=True, null=True)),
                ('entered_grade_level_id', models.IntegerField(blank=True, null=True)),
                ('passed_hsee_ela', models.NullBooleanField()),
                ('hsee_math_score', models.IntegerField(blank=True, null=True)),
                ('hsee_math_date', models.DateField(blank=True, null=True)),
                ('passed_hsee_math', models.NullBooleanField()),
                ('hsee_ela_score', models.IntegerField(blank=True, null=True)),
                ('hsee_ela_date', models.DateField(blank=True, null=True)),
                ('internet_release', models.NullBooleanField()),
                ('graduation_status', models.IntegerField(blank=True, null=True)),
                ('next_school_site_id', models.IntegerField(blank=True, null=True)),
                ('previous_id', models.CharField(blank=True, max_length=30, null=True)),
                ('home_address_verification_date', models.DateField(blank=True, null=True)),
                ('service_learning_hours', models.FloatField(blank=True, null=True)),
                ('ag_satisfied', models.NullBooleanField()),
                ('is_hispanic', models.NullBooleanField()),
                ('parent_education_level', models.IntegerField(blank=True, null=True)),
                ('cumulative_file_sent_to', models.CharField(blank=True, max_length=255, null=True)),
                ('cumulative_file_sent_on', models.DateField(blank=True, null=True)),
                ('is_homeless', models.NullBooleanField()),
                ('expected_receiver_school', models.IntegerField(blank=True, null=True)),
                ('nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('field_english_proficiency_date', models.DateField(blank=True, db_column='_english_proficiency_date', null=True)),
                ('cumulative_file_recvd_from', models.CharField(blank=True, max_length=255, null=True)),
                ('cumulative_file_recvd_on', models.DateField(blank=True, null=True)),
                ('child_care', models.NullBooleanField()),
                ('is_f1_visa', models.NullBooleanField()),
                ('is_foster_care', models.NullBooleanField()),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('birth_order', models.IntegerField(blank=True, null=True)),
                ('mothers_maiden_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('resident_county_id', models.IntegerField(blank=True, null=True)),
                ('mentor_name', models.CharField(blank=True, max_length=255, null=True)),
                ('expected_graduation_year', models.IntegerField(blank=True, null=True)),
                ('hazard_id', models.IntegerField(blank=True, null=True)),
                ('lunch_balance', models.FloatField(blank=True, null=True)),
                ('import_student_id', models.CharField(max_length=30)),
                ('info_sharing_opt_out', models.NullBooleanField()),
                ('case_manager_504', models.CharField(blank=True, max_length=255, null=True)),
                ('pre_k_funding_source', models.IntegerField(blank=True, null=True)),
                ('prior_to_k_experience', models.IntegerField(blank=True, null=True)),
                ('pre_k_length', models.CharField(blank=True, max_length=255, null=True)),
                ('foster_care_id', models.CharField(blank=True, max_length=100, null=True)),
                ('student_guid', models.UUIDField()),
                ('reported_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reported_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reported_middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reported_gender', models.CharField(blank=True, max_length=1, null=True)),
                ('military_family_indicator', models.IntegerField()),
                ('cellphone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'students',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Terms',
            fields=[
                ('term_id', models.AutoField(primary_key=True, serialize=False)),
                ('term_name', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('field_schedule_id', models.IntegerField(blank=True, db_column='_schedule_id', null=True)),
                ('session_id', models.IntegerField()),
                ('term_num', models.IntegerField()),
                ('term_type', models.IntegerField()),
                ('local_term_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'terms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Timeblocks',
            fields=[
                ('timeblock_id', models.IntegerField(primary_key=True, serialize=False)),
                ('timeblock_name', models.CharField(blank=True, max_length=255, null=True)),
                ('order_num', models.IntegerField()),
                ('session_id', models.IntegerField()),
                ('is_homeroom', models.NullBooleanField()),
                ('occurrence_order', models.SmallIntegerField()),
                ('is_primary', models.BooleanField()),
                ('short_name', models.CharField(blank=True, max_length=20, null=True)),
                ('include_in_extracts', models.BooleanField()),
            ],
            options={
                'db_table': 'timeblocks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=200, null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('suffix', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('password', models.CharField(max_length=255)),
                ('phone1', models.CharField(blank=True, max_length=20, null=True)),
                ('phone2', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('zip', models.CharField(blank=True, max_length=11, null=True)),
                ('last_mod_by', models.IntegerField(blank=True, null=True)),
                ('email1', models.CharField(blank=True, max_length=255, null=True)),
                ('email2', models.CharField(blank=True, max_length=255, null=True)),
                ('credentials', models.TextField(blank=True, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('sign_attendance', models.NullBooleanField()),
                ('job_title', models.CharField(blank=True, max_length=200, null=True)),
                ('staff_education_level', models.IntegerField(blank=True, null=True)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('exit_date', models.DateField(blank=True, null=True)),
                ('name_former_first', models.CharField(blank=True, max_length=200, null=True)),
                ('name_former_middle', models.CharField(blank=True, max_length=200, null=True)),
                ('name_former_last', models.CharField(blank=True, max_length=200, null=True)),
                ('primary_ethnicity', models.IntegerField(blank=True, null=True)),
                ('allow_rollover', models.NullBooleanField()),
                ('state_id', models.CharField(blank=True, max_length=30, null=True)),
                ('is_god', models.NullBooleanField()),
                ('is_hispanic', models.NullBooleanField()),
                ('ssn4', models.CharField(blank=True, max_length=4, null=True)),
                ('active', models.NullBooleanField()),
                ('local_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('local_user_concat_id', models.CharField(blank=True, max_length=50, null=True)),
                ('password_expiration_date', models.DateField(blank=True, null=True)),
                ('field_last_login_time', models.DateTimeField(blank=True, db_column='_last_login_time', null=True)),
                ('bypass_remote_auth', models.BooleanField()),
                ('exclude_from_state_reporting', models.NullBooleanField()),
                ('field_recent_login_count', models.IntegerField(db_column='_recent_login_count')),
                ('creation_time', models.DateTimeField(blank=True, null=True)),
                ('last_mod_time', models.DateTimeField(blank=True, null=True)),
                ('badge_access_key', models.CharField(blank=True, max_length=255, null=True)),
                ('password_version', models.IntegerField()),
                ('user_guid', models.UUIDField()),
                ('illuminate_employee', models.BooleanField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DailyRecords',
            fields=[
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='sis_mirror.Students')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='sis_mirror.Sites')),
                ('date', models.DateField(primary_key=True)),
            ],
            options={
                'db_table': 'daily_records',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsCube',
            fields=[
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='sis_mirror.Sites')),
                ('academic_year', models.IntegerField(blank=True, primary_key=True)),
                ('grade_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='sis_mirror.GradeLevels')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='sis_mirror.Users')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='sis_mirror.Sections')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='sis_mirror.Courses')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, to='sis_mirror.Students')),
                ('entry_date', models.DateField(blank=True, primary_key=True)),
                ('leave_date', models.DateField(blank=True, primary_key=True)),
                ('is_primary_teacher', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ss_cube',
                'managed': False,
            },
        ),
    ]
