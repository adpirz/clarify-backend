# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-04-10 22:28
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sis_pull.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceDailyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AttendanceFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag_text', models.CharField(max_length=255)),
                ('character_code', models.CharField(max_length=30)),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=255)),
                ('weight', models.FloatField()),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CategoryScoreCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('possible_points', models.FloatField()),
                ('points_earned', models.FloatField()),
                ('percentage', models.FloatField()),
                ('category_name', models.CharField(max_length=255)),
                ('mark', models.CharField(max_length=255)),
                ('assignment_count', models.IntegerField()),
                ('calculated_at', models.DateTimeField()),
                ('timeframe_start_date', models.DateField()),
                ('timeframe_end_date', models.DateField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Category')),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CategoryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_type_name', models.CharField(max_length=255)),
                ('is_academic', models.BooleanField(default=True)),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=30)),
                ('long_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('school_course_id', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_id', models.IntegerField()),
                ('code_key', models.CharField(max_length=10)),
                ('code_translation', models.CharField(max_length=255)),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Gradebook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField()),
                ('gradebook_name', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=True)),
                ('academic_year', models.PositiveIntegerField()),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GradebookSectionCourseAff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Course')),
                ('gradebook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Gradebook')),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GradeLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField()),
                ('short_name', models.CharField(max_length=255)),
                ('long_name', models.CharField(max_length=255)),
                ('state_id', models.CharField(max_length=455)),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OverallScoreCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('possible_points', models.FloatField()),
                ('points_earned', models.FloatField()),
                ('percentage', models.FloatField()),
                ('mark', models.CharField(max_length=255)),
                ('missing_count', models.IntegerField()),
                ('zero_count', models.IntegerField()),
                ('excused_count', models.IntegerField()),
                ('gradebook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Gradebook')),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SectionLevelRosterPerYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.PositiveIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Course')),
                ('grade_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.GradeLevel')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Section')),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(choices=[('MR', 'Mr.'), ('MS', 'Ms.'), ('MRS', 'Mrs.')], default='MS', max_length=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'staff',
                'verbose_name_plural': 'staff',
            },
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('ethnicity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Ethnicity')),
            ],
            bases=(sis_pull.models.SourceObjectMixin, models.Model),
        ),
        migrations.AddField(
            model_name='sectionlevelrosterperyear',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Site'),
        ),
        migrations.AddField(
            model_name='sectionlevelrosterperyear',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Staff'),
        ),
        migrations.AddField(
            model_name='overallscorecache',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Student'),
        ),
        migrations.AddField(
            model_name='gradebooksectioncourseaff',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Section'),
        ),
        migrations.AddField(
            model_name='gradebooksectioncourseaff',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Staff'),
        ),
        migrations.AddField(
            model_name='gradebook',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Staff'),
        ),
        migrations.AddField(
            model_name='course',
            name='site_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Site'),
        ),
        migrations.AddField(
            model_name='categoryscorecache',
            name='gradebook',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Gradebook'),
        ),
        migrations.AddField(
            model_name='categoryscorecache',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Student'),
        ),
        migrations.AddField(
            model_name='category',
            name='category_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.CategoryType'),
        ),
        migrations.AddField(
            model_name='category',
            name='gradebook',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Gradebook'),
        ),
        migrations.AddField(
            model_name='attendancedailyrecord',
            name='attendance_flag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.AttendanceFlag'),
        ),
        migrations.AddField(
            model_name='attendancedailyrecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_pull.Student'),
        ),
        migrations.AlterUniqueTogether(
            name='attendancedailyrecord',
            unique_together=set([('date', 'student')]),
        ),
    ]
